[{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC-MEB.html","id":"install-the-isc-meb","dir":"Articles","previous_headings":"","what":"Install the iSC.MEB","title":"iSC.MEB: installation","text":"vignette provides introduction R package iSC.MEB, function iSC.MEB implements model iSCMEB, integrate spatial clustering analysis method hidden Markov random field using empirical Bayes. package can installed following command Github: package can loaded command:","code":"install.packages('devtools') devtools::install_github(\"XiaoZhangryy/iSC.MEB\") library(\"iSC.MEB\") #> Loading required package: gtools #> Loading required package: ggplot2"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC-MEB.html","id":"setup-on-linux-or-macos-system","dir":"Articles","previous_headings":"","what":"Setup on Linux or MacOS system","title":"iSC.MEB: installation","text":"running big data, users can use following system command set C_stack unlimited case R Error: C stack usage close limit.","code":"ulimit -s unlimited"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"intrduction","dir":"Articles","previous_headings":"","what":"Intrduction","title":"iSC.MEB: DLPFC Data Analysis","text":"vignette introduces iSC.MEB workflow analysis DLPFC dataset Maynard K. et al, 2021, contains spatial topography gene expression 12 human postmortem DLPFC tissue sections generated using 10x Genomics Visium platform. workflow consists three steps Independent preprocessing model setting Integrated clustering using iSC.MEB model Downstream analysis (.e.Â visualization clusters embeddings) demonstrate use iSC.MEB DLPFC data filter , can downloaded current working path following command: package can loaded command: load datasets R","code":"githubURL <- \"https://github.com/XiaoZhangryy/iSC.MEB/blob/main/vignettes_data/DLPFC.rda?raw=true\" download.file(githubURL, \"DLPFC.rda\", mode = \"wb\") library(iSC.MEB) library(Seurat) load(\"DLPFC.rda\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"fit-an-isc-meb-model","dir":"Articles","previous_headings":"","what":"Fit an iSC.MEB model","title":"iSC.MEB: DLPFC Data Analysis","text":"First, view spatial transcriptomics data Visium platform.","code":"seuList  ## a list including two Seurat object #> $`151507` #> An object of class Seurat  #> 2000 features across 4226 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151508` #> An object of class Seurat  #> 2000 features across 4384 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151509` #> An object of class Seurat  #> 2000 features across 4789 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151510` #> An object of class Seurat  #> 2000 features across 4633 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151669` #> An object of class Seurat  #> 2000 features across 3661 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151670` #> An object of class Seurat  #> 2000 features across 3498 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151671` #> An object of class Seurat  #> 2000 features across 4110 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151672` #> An object of class Seurat  #> 2000 features across 4015 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151673` #> An object of class Seurat  #> 2000 features across 3639 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151674` #> An object of class Seurat  #> 2000 features across 3673 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151675` #> An object of class Seurat  #> 2000 features across 3592 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features) #>  #> $`151676` #> An object of class Seurat  #> 2000 features across 3460 samples within 1 assay  #> Active assay: RNA (2000 features, 0 variable features)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"prepare-the-isc-meb-object-","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Prepare the iSC.MEB Object.","title":"iSC.MEB: DLPFC Data Analysis","text":", can create iSCMEBObj object prepare iSC.MEB models. next, performe create adjacency matrix, dimensionality reduction set model setting steps turn.","code":"iSCMEBObj <- CreateiSCMEBObject(seuList = seuList, verbose = FALSE, premin.spots = 0, postmin.spots = 0) ## check the number of genes/features after filtering step iSCMEBObj@seulist #> $`151507` #> An object of class Seurat  #> 2000 features across 4226 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151508` #> An object of class Seurat  #> 2000 features across 4384 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151509` #> An object of class Seurat  #> 2000 features across 4789 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151510` #> An object of class Seurat  #> 2000 features across 4633 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151669` #> An object of class Seurat  #> 2000 features across 3661 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151670` #> An object of class Seurat  #> 2000 features across 3498 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151671` #> An object of class Seurat  #> 2000 features across 4110 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151672` #> An object of class Seurat  #> 2000 features across 4015 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151673` #> An object of class Seurat  #> 2000 features across 3639 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151674` #> An object of class Seurat  #> 2000 features across 3673 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151675` #> An object of class Seurat  #> 2000 features across 3592 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) #>  #> $`151676` #> An object of class Seurat  #> 2000 features across 3460 samples within 1 assay  #> Active assay: RNA (2000 features, 2000 variable features) ## Add adjacency matrix list for a iSCMEBObj object to prepare for iSC.MEB model fitting. iSCMEBObj <- CreateNeighbors(iSCMEBObj, platform = \"Visium\") ## run PCA to get low dimensional embeddings iSCMEBObj <- runPCA(iSCMEBObj, npcs = 15, pca.method = \"APCA\") ## Add a model setting in advance for an iSCMEBObj object. verbose = TRUE helps outputing the ## information in the algorithm. iSCMEBObj <- SetModelParameters(iSCMEBObj, verbose = TRUE, init.start = 3)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"fit-isc-meb","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Fit iSC.MEB","title":"iSC.MEB: DLPFC Data Analysis","text":"function iSCMEB, users can specify number clusters K set K integer vector using modified MBIC(BIC) determine K. , use user-specified number clusters. function iSCMEB automatically choose optimal path criteria specified setting model parameters step. User can slao using function SelectModel select model.","code":"### Given K iSCMEBObj <- iSCMEB(iSCMEBObj, K = 7) #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> Finish variable initialization  #> K = 7, iter = 2, loglik= -739374.536953, dloglik=0.999656  #> K = 7, iter = 3, loglik= -686395.923049, dloglik=0.071653  #> K = 7, iter = 4, loglik= -648513.227838, dloglik=0.055191  #> K = 7, iter = 5, loglik= -622432.020790, dloglik=0.040217  #> K = 7, iter = 6, loglik= -601552.500493, dloglik=0.033545  #> K = 7, iter = 7, loglik= -587030.896744, dloglik=0.024140  #> K = 7, iter = 8, loglik= -575898.735361, dloglik=0.018964  #> K = 7, iter = 9, loglik= -567666.219858, dloglik=0.014295  #> K = 7, iter = 10, loglik= -561780.471931, dloglik=0.010368  #> K = 7, iter = 11, loglik= -556683.791429, dloglik=0.009072  #> K = 7, iter = 12, loglik= -552584.827776, dloglik=0.007363  #> K = 7, iter = 13, loglik= -549017.040964, dloglik=0.006457  #> K = 7, iter = 14, loglik= -546387.810616, dloglik=0.004789  #> K = 7, iter = 15, loglik= -544133.820599, dloglik=0.004125  #> K = 7, iter = 16, loglik= -542262.211910, dloglik=0.003440  #> K = 7, iter = 17, loglik= -540639.895015, dloglik=0.002992  #> K = 7, iter = 18, loglik= -539247.863521, dloglik=0.002575  #> K = 7, iter = 19, loglik= -538153.727245, dloglik=0.002029  #> K = 7, iter = 20, loglik= -537258.256867, dloglik=0.001664  #> K = 7, iter = 21, loglik= -536414.459817, dloglik=0.001571  #> K = 7, iter = 22, loglik= -535718.915031, dloglik=0.001297  #> K = 7, iter = 23, loglik= -535066.644561, dloglik=0.001218  #> K = 7, iter = 24, loglik= -534542.541252, dloglik=0.000980  #> K = 7, iter = 25, loglik= -534096.384174, dloglik=0.000835 iSCMEBObj <- SelectModel(iSCMEBObj)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"evaluate-performance","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Evaluate performance","title":"iSC.MEB: DLPFC Data Analysis","text":"function idents can extract labels provided iSC.MEB method. Therefore, can evaluate clustering performance metrics, ARI.","code":"LabelList <- lapply(iSCMEBObj@seulist, function(seu) seu@meta.data$layer_guess_reordered) ARI <- function(x, y) mclust::adjustedRandIndex(x, y) ari_sections <- sapply(1:12, function(i) ARI(idents(iSCMEBObj)[[i]], LabelList[[i]])) ari_all <- ARI(unlist(idents(iSCMEBObj)), unlist(LabelList)) print(ari_sections) #>  [1] 0.5476325 0.5690027 0.6004179 0.6006897 0.3970740 0.3742799 0.6126559 #>  [8] 0.5199949 0.5533222 0.4906102 0.4958159 0.5440328 print(ari_all) #> [1] 0.4923157"},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"spatial-scatter-plot","dir":"Articles","previous_headings":"Visualization","what":"Spatial scatter plot","title":"iSC.MEB: DLPFC Data Analysis","text":"addition metrics, can use visualization functions measure clustering results, spatial scatter plot.","code":"cols = c(\"#8dd3c7\", \"#80b1d3\", \"#ffffb3\", \"#fb8072\", \"#bebada\", \"#fdb462\", \"#b3de69\") p1 <- SpaHeatMap(iSCMEBObj, item = \"cluster\", plot_type = \"Scatter\", nrow.legend = 1, layout.dim = c(4,     3), no_axis = TRUE, cols = cols) p1"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"t-sne-plot-","dir":"Articles","previous_headings":"Visualization","what":"t-SNE plot.","title":"iSC.MEB: DLPFC Data Analysis","text":"Next, user can visualize inferred embeddings biological effects cell/domain types using two components either tSNE UMAP. , wo demonstrate clustering batch remove performance t-SNE plot.","code":"iSCMEBObj <- CalculateTSNE(iSCMEBObj, reduction = \"iSCMEB\", n_comp = 2) library(patchwork)  p2 <- LowEmbedPlot(iSCMEBObj, item = \"cluster\", reduction = \"TSNE2\", point_size = 0.3) p3 <- LowEmbedPlot(iSCMEBObj, item = \"batch\", reduction = \"TSNE2\", point_size = 0.3) p2 + p3"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.DLPFC.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"iSC.MEB: DLPFC Data Analysis","text":"","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19045) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #> system code page: 936 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] patchwork_1.1.2    SeuratObject_4.1.3 Seurat_4.2.1       iSC.MEB_1.0        #> [5] ggplot2_3.4.0      gtools_3.9.3       #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.2                  spatstat.explore_3.0-5      #>   [3] reticulate_1.26             tidyselect_1.2.0            #>   [5] htmlwidgets_1.5.4           grid_4.1.3                  #>   [7] BiocParallel_1.28.3         Rtsne_0.16                  #>   [9] ScaledMatrix_1.2.0          munsell_0.5.0               #>  [11] codetools_0.2-18            ragg_1.2.4                  #>  [13] ica_1.0-3                   future_1.29.0               #>  [15] miniUI_0.1.1.1              withr_2.5.0                 #>  [17] spatstat.random_3.0-1       colorspace_2.0-3            #>  [19] progressr_0.11.0            Biobase_2.54.0              #>  [21] highr_0.9                   knitr_1.41                  #>  [23] rstudioapi_0.14             stats4_4.1.3                #>  [25] SingleCellExperiment_1.16.0 ROCR_1.0-11                 #>  [27] ggsignif_0.6.4              tensor_1.5                  #>  [29] listenv_0.8.0               labeling_0.4.2              #>  [31] MatrixGenerics_1.6.0        GenomeInfoDbData_1.2.7      #>  [33] polyclip_1.10-4             farver_2.1.1                #>  [35] rprojroot_2.0.3             parallelly_1.32.1           #>  [37] vctrs_0.5.0                 generics_0.1.3              #>  [39] xfun_0.35                   R6_2.5.1                    #>  [41] GenomeInfoDb_1.30.1         ggbeeswarm_0.6.0            #>  [43] rsvd_1.0.5                  bitops_1.0-7                #>  [45] spatstat.utils_3.0-1        cachem_1.0.6                #>  [47] DelayedArray_0.20.0         assertthat_0.2.1            #>  [49] promises_1.2.0.1            scales_1.2.1                #>  [51] beeswarm_0.4.0              gtable_0.3.1                #>  [53] beachmat_2.10.0             globals_0.16.1              #>  [55] goftest_1.2-3               rlang_1.0.6                 #>  [57] systemfonts_1.0.4           splines_4.1.3               #>  [59] rstatix_0.7.1               lazyeval_0.2.2              #>  [61] spatstat.geom_3.0-3         broom_1.0.1                 #>  [63] yaml_2.3.6                  reshape2_1.4.4              #>  [65] abind_1.4-5                 backports_1.4.1             #>  [67] httpuv_1.6.6                tools_4.1.3                 #>  [69] ellipsis_0.3.2              jquerylib_0.1.4             #>  [71] RColorBrewer_1.1-3          BiocGenerics_0.40.0         #>  [73] ggridges_0.5.4              Rcpp_1.0.9                  #>  [75] plyr_1.8.8                  sparseMatrixStats_1.6.0     #>  [77] zlibbioc_1.40.0             purrr_0.3.5                 #>  [79] RCurl_1.98-1.9              ggpubr_0.4.0                #>  [81] deldir_1.0-6                viridis_0.6.2               #>  [83] pbapply_1.5-0               cowplot_1.1.1               #>  [85] S4Vectors_0.32.4            zoo_1.8-11                  #>  [87] SummarizedExperiment_1.24.0 ggrepel_0.9.2               #>  [89] cluster_2.1.4               fs_1.5.2                    #>  [91] magrittr_2.0.3              GiRaF_1.0.1                 #>  [93] data.table_1.14.4           scattermore_0.8             #>  [95] lmtest_0.9-40               RANN_2.6.1                  #>  [97] fitdistrplus_1.1-8          matrixStats_0.62.0          #>  [99] mime_0.12                   evaluate_0.18               #> [101] xtable_1.8-4                mclust_6.0.0                #> [103] IRanges_2.28.0              gridExtra_2.3               #> [105] compiler_4.1.3              scater_1.22.0               #> [107] tibble_3.1.8                KernSmooth_2.23-20          #> [109] htmltools_0.5.3             later_1.3.0                 #> [111] tidyr_1.2.1                 DBI_1.1.3                   #> [113] formatR_1.12                MASS_7.3-58.1               #> [115] Matrix_1.5-1                car_3.1-1                   #> [117] cli_3.4.1                   parallel_4.1.3              #> [119] igraph_1.3.5                DR.SC_2.9                   #> [121] GenomicRanges_1.46.1        pkgconfig_2.0.3             #> [123] pkgdown_2.0.6               sp_1.5-1                    #> [125] plotly_4.10.1               scuttle_1.4.0               #> [127] spatstat.sparse_3.0-0       vipor_0.4.5                 #> [129] bslib_0.4.1                 XVector_0.34.0              #> [131] CompQuadForm_1.4.3          stringr_1.4.1               #> [133] digest_0.6.30               sctransform_0.3.5           #> [135] RcppAnnoy_0.0.20            spatstat.data_3.0-0         #> [137] rmarkdown_2.18              leiden_0.4.3                #> [139] uwot_0.1.14                 DelayedMatrixStats_1.16.0   #> [141] shiny_1.7.3                 lifecycle_1.0.3             #> [143] nlme_3.1-160                jsonlite_1.8.3              #> [145] carData_3.0-5               BiocNeighbors_1.12.0        #> [147] desc_1.4.2                  viridisLite_0.4.1           #> [149] fansi_1.0.3                 pillar_1.8.1                #> [151] lattice_0.20-45             fastmap_1.1.0               #> [153] httr_1.4.4                  survival_3.4-0              #> [155] glue_1.6.2                  png_0.1-7                   #> [157] stringi_1.7.8               sass_0.4.2                  #> [159] textshaping_0.3.6           BiocSingular_1.10.0         #> [161] memoise_2.0.1               dplyr_1.0.10                #> [163] irlba_2.3.5.1               future.apply_1.10.0"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"intrduction","dir":"Articles","previous_headings":"","what":"Intrduction","title":"iSC.MEB: seqFISH Data Analysis","text":"vignette introduces iSC.MEB workflow analysis seqFISH datasets. seqFISH dataset contains high-resolution spatial map 6 mouse embryo tissue sections generated modified version seqFISH (sequential fluorescence situ hybridization) method allows highly-effective cell segmentation Lohoff T. et al., 2020. workflow consists three steps Independent preprocessing model setting Integrated clustering using iSC.MEB model Downstream analysis (.e.Â visualization clusters embeddings, combined differential expression analysis) demonstrate use iSC.MEB 6 seqFISH datasets , can downloaded current working path following command: package can loaded command: load datasets R","code":"githubURL <- \"https://github.com/XiaoZhangryy/iSC.MEB/blob/main/vignettes_data/seqFISH.rda?raw=true\" download.file(githubURL, \"seqFISH.rda\", mode = \"wb\") library(iSC.MEB) library(Seurat) load(\"seqFISH.rda\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"fit-an-isc-meb-model","dir":"Articles","previous_headings":"","what":"Fit an iSC.MEB model","title":"iSC.MEB: seqFISH Data Analysis","text":"First, view spatial transcriptomics data.","code":"seuList  ## a list including six Seurat object #> [[1]] #> An object of class Seurat  #> 351 features across 2025 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[2]] #> An object of class Seurat  #> 351 features across 1528 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[3]] #> An object of class Seurat  #> 351 features across 1530 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[4]] #> An object of class Seurat  #> 351 features across 1304 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[5]] #> An object of class Seurat  #> 351 features across 2221 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[6]] #> An object of class Seurat  #> 351 features across 1874 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"prepare-the-isc-meb-object-","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Prepare the iSC.MEB Object.","title":"iSC.MEB: seqFISH Data Analysis","text":", can create iSCMEBObj object prepare iSC.MEB models. next, performe create adjacency matrix, dimensionality reduction set model setting steps turn. , adjacency matrix built based L2 distance.","code":"Genelist <- row.names(seuList[[1]]) iSCMEBObj <- CreateiSCMEBObject(seuList = seuList, customGenelist = Genelist, verbose = FALSE) ## check the number of genes/features after filtering step iSCMEBObj@seulist #> [[1]] #> An object of class Seurat  #> 351 features across 2012 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[2]] #> An object of class Seurat  #> 351 features across 1519 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[3]] #> An object of class Seurat  #> 351 features across 1525 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[4]] #> An object of class Seurat  #> 351 features across 1299 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[5]] #> An object of class Seurat  #> 351 features across 2174 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) #>  #> [[6]] #> An object of class Seurat  #> 351 features across 1830 samples within 1 assay  #> Active assay: RNA (351 features, 0 variable features) ## Add adjacency matrix list for a iSCMEBObj object to prepare for iSC.MEB model fitting. iSCMEBObj <- CreateNeighbors(iSCMEBObj, radius.upper = 10) ## run PCA to get low dimensional embeddings iSCMEBObj <- runPCA(iSCMEBObj, npcs = 15, pca.method = \"APCA\") ## Add a model setting in advance for an iSCMEBObj object. verbose = TRUE helps outputing the ## information in the algorithm. iSCMEBObj <- SetModelParameters(iSCMEBObj, verbose = FALSE, coreNum = 8)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"fit-isc-meb","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Fit iSC.MEB","title":"iSC.MEB: seqFISH Data Analysis","text":"function iSCMEB, users can specify number clusters K set K integer vector using modified MBIC(BIC) determine K. , use MBIC select optimal number clusters, default method. User can use specifying criteria function SetModelParameters using function SelectModel select model model fitting. briefly explain choose parameter c_penalty modified BIC. general, number cluster considered small, less 10 clusters, c_penalty often large, example 5, 10. number cluster considered large, c_penalty often ranges 0.5 2. importantly, iSC.MEB fast, scaling well terms sample size, allow user tune c_penalty based prior knowledge tissues cells.","code":"iSCMEBObj <- iSCMEB(iSCMEBObj, K = 15:22) iSCMEBObj <- SelectModel(iSCMEBObj, criteria = \"MBIC\", c_penalty = 0.6) p1 <- SelectKPlot(iSCMEBObj, criteria = \"MBIC\") p1"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"evaluate-performance","dir":"Articles","previous_headings":"Fit an iSC.MEB model","what":"Evaluate performance","title":"iSC.MEB: seqFISH Data Analysis","text":"function idents can extract labels provided iSC.MEB method. Therefore, can evaluate clustering performance metrics, ARI.","code":"LabelList <- lapply(iSCMEBObj@seulist, function(seu) seu@meta.data$celltype_mapped_refined) ARI <- function(x, y) mclust::adjustedRandIndex(x, y) ari_sections <- sapply(1:6, function(i) ARI(idents(iSCMEBObj)[[i]], LabelList[[i]])) ari_all <- ARI(unlist(idents(iSCMEBObj)), unlist(LabelList)) print(ari_sections) #> [1] 0.5056251 0.5220306 0.5696162 0.5029906 0.5296884 0.5524007 print(ari_all) #> [1] 0.5189077"},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"spatial-scatter-plot","dir":"Articles","previous_headings":"Visualization","what":"Spatial scatter plot","title":"iSC.MEB: seqFISH Data Analysis","text":"addition metrics, can use visualization functions measure clustering results, spatial scatter plot.","code":"p2 <- SpaHeatMap(iSCMEBObj, item = \"cluster\", plot_type = \"Scatter\", layout.dim = c(3, 2), nrow.legend = 2,     no_axis = TRUE, point_size = 1) p2"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"t-sne-plot-","dir":"Articles","previous_headings":"Visualization","what":"t-SNE plot.","title":"iSC.MEB: seqFISH Data Analysis","text":"Next, user can visualize inferred embeddings biological effects cell/domain types using two components either tSNE UMAP. , wo demonstrate clustering batch remove performance t-SNE plot.","code":"iSCMEBObj <- CalculateTSNE(iSCMEBObj, reduction = \"iSCMEB\", n_comp = 2) library(patchwork) p3 <- LowEmbedPlot(iSCMEBObj, item = \"cluster\", reduction = \"TSNE2\", point_size = 0.5) p4 <- LowEmbedPlot(iSCMEBObj, item = \"batch\", reduction = \"TSNE2\", point_size = 0.5) p3 + p4"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"combined-differential-expression-analysis","dir":"Articles","previous_headings":"Visualization","what":"Combined differential expression analysis","title":"iSC.MEB: seqFISH Data Analysis","text":"Finally, also provide functions fecility user combined differential expression analysis. IntegrateSpaData function can integrate multiple SRT data based results, function doDEG provide top differential expression genes, function doHeatmap plot heatmap.","code":"seuInt <- IntegrateSpaData(iSCMEBObj, \"mouse\") top10 <- doDEG(seuInt, topn = 10) save(iSCMEBObj, top10, seuInt, file = \"seqfish.rda\") p5 <- doHeatmap(seuInt, top10$gene) p5"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/articles/iSC.MEB.seqFISH.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"iSC.MEB: seqFISH Data Analysis","text":"","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19045) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #> system code page: 936 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] patchwork_1.1.2    SeuratObject_4.1.3 Seurat_4.2.1       iSC.MEB_1.0        #> [5] ggplot2_3.4.0      gtools_3.9.3       #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.2                  spatstat.explore_3.0-5      #>   [3] reticulate_1.26             tidyselect_1.2.0            #>   [5] htmlwidgets_1.5.4           grid_4.1.3                  #>   [7] BiocParallel_1.28.3         Rtsne_0.16                  #>   [9] ScaledMatrix_1.2.0          munsell_0.5.0               #>  [11] codetools_0.2-18            ragg_1.2.4                  #>  [13] ica_1.0-3                   future_1.29.0               #>  [15] miniUI_0.1.1.1              withr_2.5.0                 #>  [17] spatstat.random_3.0-1       colorspace_2.0-3            #>  [19] progressr_0.11.0            Biobase_2.54.0              #>  [21] highr_0.9                   knitr_1.41                  #>  [23] rstudioapi_0.14             stats4_4.1.3                #>  [25] SingleCellExperiment_1.16.0 ROCR_1.0-11                 #>  [27] ggsignif_0.6.4              tensor_1.5                  #>  [29] listenv_0.8.0               labeling_0.4.2              #>  [31] MatrixGenerics_1.6.0        GenomeInfoDbData_1.2.7      #>  [33] polyclip_1.10-4             farver_2.1.1                #>  [35] rprojroot_2.0.3             parallelly_1.32.1           #>  [37] vctrs_0.5.0                 generics_0.1.3              #>  [39] xfun_0.35                   R6_2.5.1                    #>  [41] GenomeInfoDb_1.30.1         ggbeeswarm_0.6.0            #>  [43] rsvd_1.0.5                  bitops_1.0-7                #>  [45] spatstat.utils_3.0-1        cachem_1.0.6                #>  [47] DelayedArray_0.20.0         assertthat_0.2.1            #>  [49] promises_1.2.0.1            scales_1.2.1                #>  [51] beeswarm_0.4.0              gtable_0.3.1                #>  [53] beachmat_2.10.0             globals_0.16.1              #>  [55] goftest_1.2-3               rlang_1.0.6                 #>  [57] systemfonts_1.0.4           splines_4.1.3               #>  [59] rstatix_0.7.1               lazyeval_0.2.2              #>  [61] spatstat.geom_3.0-3         broom_1.0.1                 #>  [63] yaml_2.3.6                  reshape2_1.4.4              #>  [65] abind_1.4-5                 backports_1.4.1             #>  [67] httpuv_1.6.6                tools_4.1.3                 #>  [69] ellipsis_0.3.2              jquerylib_0.1.4             #>  [71] RColorBrewer_1.1-3          BiocGenerics_0.40.0         #>  [73] ggridges_0.5.4              Rcpp_1.0.9                  #>  [75] plyr_1.8.8                  sparseMatrixStats_1.6.0     #>  [77] zlibbioc_1.40.0             purrr_0.3.5                 #>  [79] RCurl_1.98-1.9              ggpubr_0.4.0                #>  [81] deldir_1.0-6                viridis_0.6.2               #>  [83] pbapply_1.5-0               cowplot_1.1.1               #>  [85] S4Vectors_0.32.4            zoo_1.8-11                  #>  [87] SummarizedExperiment_1.24.0 ggrepel_0.9.2               #>  [89] cluster_2.1.4               fs_1.5.2                    #>  [91] magrittr_2.0.3              GiRaF_1.0.1                 #>  [93] data.table_1.14.4           scattermore_0.8             #>  [95] lmtest_0.9-40               RANN_2.6.1                  #>  [97] fitdistrplus_1.1-8          matrixStats_0.62.0          #>  [99] mime_0.12                   evaluate_0.18               #> [101] xtable_1.8-4                mclust_6.0.0                #> [103] IRanges_2.28.0              gridExtra_2.3               #> [105] compiler_4.1.3              scater_1.22.0               #> [107] tibble_3.1.8                KernSmooth_2.23-20          #> [109] htmltools_0.5.3             later_1.3.0                 #> [111] tidyr_1.2.1                 DBI_1.1.3                   #> [113] formatR_1.12                MASS_7.3-58.1               #> [115] Matrix_1.5-1                car_3.1-1                   #> [117] cli_3.4.1                   parallel_4.1.3              #> [119] igraph_1.3.5                DR.SC_2.9                   #> [121] GenomicRanges_1.46.1        pkgconfig_2.0.3             #> [123] pkgdown_2.0.6               sp_1.5-1                    #> [125] plotly_4.10.1               scuttle_1.4.0               #> [127] spatstat.sparse_3.0-0       vipor_0.4.5                 #> [129] bslib_0.4.1                 XVector_0.34.0              #> [131] CompQuadForm_1.4.3          stringr_1.4.1               #> [133] digest_0.6.30               sctransform_0.3.5           #> [135] RcppAnnoy_0.0.20            spatstat.data_3.0-0         #> [137] rmarkdown_2.18              leiden_0.4.3                #> [139] uwot_0.1.14                 DelayedMatrixStats_1.16.0   #> [141] shiny_1.7.3                 lifecycle_1.0.3             #> [143] nlme_3.1-160                jsonlite_1.8.3              #> [145] carData_3.0-5               BiocNeighbors_1.12.0        #> [147] limma_3.50.3                desc_1.4.2                  #> [149] viridisLite_0.4.1           fansi_1.0.3                 #> [151] pillar_1.8.1                lattice_0.20-45             #> [153] fastmap_1.1.0               httr_1.4.4                  #> [155] survival_3.4-0              glue_1.6.2                  #> [157] png_0.1-7                   stringi_1.7.8               #> [159] sass_0.4.2                  textshaping_0.3.6           #> [161] BiocSingular_1.10.0         memoise_2.0.1               #> [163] dplyr_1.0.10                irlba_2.3.5.1               #> [165] future.apply_1.10.0"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xiao Zhang. Author, maintainer. Wei Liu. Author. Jin Liu. Author.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang X, Liu W, Liu J (2022). iSC.MEB: Integrated spatial clustering hidden Markov random field using empirical Bayes. R package version 1.0, https://github.com/XiaoZhangryy/iSC.MEB.","code":"@Manual{,   title = {iSC.MEB: Integrated spatial clustering with hidden Markov random field using empirical Bayes},   author = {Xiao Zhang and Wei Liu and Jin Liu},   year = {2022},   note = {R package version 1.0},   url = {https://github.com/XiaoZhangryy/iSC.MEB}, }"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"iscmeb","dir":"","previous_headings":"","what":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"iSC.MEB: Integrate spatial clustering analysis hidden Markov random field using empirical Bayes. iSC.MEB package integrating analyzing multiple spatially resolved transcriptomics (SRT) datasets, developed Jin Liuâs lab. Check Package Website complete description methods analyses. iSC.MEB can used compare contrast experimental datasets variety contexts, instance: Across experimental batches Across individuals Across different conditions (.e., case control) Across datasets partially shared cell/domain clusters","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"install packages âiSC.MEBâ, firstly, install âdevtoolsâ package. Besides, âiSC.MEBâ depends âRcppâ âRcppArmadilloâ package, also requires appropriate setting Rtools Xcode Windows Mac OS/X, respectively.","code":"install.packages(\"devtools\") library(devtools) install_github(\"XiaoZhangryy/iSC.MEB\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"usage examples guided walkthroughs, check vignettes directory repo. DLPFC data analysis seqFISH data analysis users donât set system properly, following setup different systems can referred. ## Setup Windows system First, download Rtools; second, add Rtools directory environment variable. Users can follow add Windows PATH Environment Variable.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"setup-on-macos-system","dir":"","previous_headings":"","what":"Setup on MacOS system","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"First, install Xcode. Installation Xcode can referred . Second, install âgfortranâ compiling C++ Fortran .","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"setup-on-linux-system","dir":"","previous_headings":"","what":"Setup on Linux system","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"parallel computation Linux, users must use following system command set C_stack unlimited case error R Error: C stack usage close limit. use conda environment Linux system dependent packages (scater) can normally installed, can search R package anaconda.org website. take scater package example, search result https://anaconda.org/bioconda/bioconductor-scater. can install conda environment following command. user using conda environment, dependent packages (scater) normally installed Bioconductor, use following command install dependent packages. dependent packages (DR.SC) normally installed CRAN, use following command install dependent packages.","code":"ulimit -s unlimited conda install -c bioconda bioconductor-scater # install BiocManager if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") # install the package on Bioconducter BiocManager::install(c(\"scater\")) # install the package on CRAN install.packages(\"DR.SC\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Integrated spatial clustering with hidden Markov random field using empirical Bayes","text":"example typical iSC.MEB usage, please see Package Website demonstration overview functions included iSC.MEB.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Addposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Add position information to fitted model â Addposition","title":"Add position information to fitted model â Addposition","text":"function Addposition used add position information fitted model.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Addposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add position information to fitted model â Addposition","text":"","code":"Addposition(obj, posList)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Addposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add position information to fitted model â Addposition","text":"obj iSCMEBResObj object. posList list two columns matrices, element contains position information -th tissue section.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Addposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add position information to fitted model â Addposition","text":"","code":"data(iSCMEBObj_toy) library(Seurat) #> Attaching SeuratObject posList <- iSCMEBObj_toy@posList resList <- iSCMEBObj_toy@resList resList <- Addposition(resList, posList)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateTSNE.html","id":null,"dir":"Reference","previous_headings":"","what":"Run t-SNE dimensionality reduction. â CalculateTSNE","title":"Run t-SNE dimensionality reduction. â CalculateTSNE","text":"function CalculateTSNE used run t-SNE dimensionality reduction.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateTSNE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run t-SNE dimensionality reduction. â CalculateTSNE","text":"","code":"CalculateTSNE(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for iSCMEBObj CalculateTSNE(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for iSCMEBResObj CalculateTSNE(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for list CalculateTSNE(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateTSNE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run t-SNE dimensionality reduction. â CalculateTSNE","text":"obj iSCMEBObj object iSCMEBResObj object list low dimension embeddings. reduction name embeddings used calculate t-SNE. reduction null, last added one used plotting. n_comp optional positive integer, specify number features extracted. seed random seed used. toList indicator whether convert UMAP representation list.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateTSNE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run t-SNE dimensionality reduction. â CalculateTSNE","text":"Returns revised iSCMEBObj object. Returns revised iSCMEBResObj object. Returns UMAP matrix.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateTSNE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run t-SNE dimensionality reduction. â CalculateTSNE","text":"","code":"data(iSCMEBObj_toy) library(Seurat) iSCMEBObj_toy <- CalculateTSNE(iSCMEBObj_toy, reduction=\"iSCMEB\") ## resList <- CalculateTSNE(iSCMEBObj_toy@resList, reduction=\"iSCMEB\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateUMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Run UMAP dimensionality reduction â CalculateUMAP","title":"Run UMAP dimensionality reduction â CalculateUMAP","text":"function CalculateUMAP used run UMAP dimensionality reduction.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateUMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run UMAP dimensionality reduction â CalculateUMAP","text":"","code":"CalculateUMAP(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for iSCMEBObj CalculateUMAP(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for iSCMEBResObj CalculateUMAP(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)  # S3 method for list CalculateUMAP(obj, reduction = NULL, n_comp = 3, seed = 1, toList = TRUE)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateUMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run UMAP dimensionality reduction â CalculateUMAP","text":"obj iSCMEBObj object iSCMEBResObj object list low dimension embeddings. reduction name embeddings used calculate UMAP. reduction null, last added one used plotting. n_comp optional positive integer, specify number features extracted. seed random seed used. toList indicator whether convert UMAP representation list.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateUMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run UMAP dimensionality reduction â CalculateUMAP","text":"Returns UMAP representation. Returns revised iSCMEBObj object. Returns revised iSCMEBResObj object. Returns UMAP matrix.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CalculateUMAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run UMAP dimensionality reduction â CalculateUMAP","text":"","code":"data(iSCMEBObj_toy) library(Seurat) iSCMEBObj_toy <- CalculateUMAP(iSCMEBObj_toy, reduction=\"iSCMEB\") ## resList <- CalculateUMAP(iSCMEBObj_toy@resList, reduction=\"iSCMEB\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"function CreateiSCMEBObject used create iSC.MEB object preprocessing step.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"","code":"CreateiSCMEBObject(   seuList,   project = \"iSC.MEB\",   gene.number = 2000,   selectGenesMethod = c(\"SPARK-X\", \"HVGs\"),   numCores_sparkx = 1,   customGenelist = NULL,   premin.spots = 20,   premin.features = 20,   postmin.spots = 15,   postmin.features = 15,   rawData.preserve = FALSE,   verbose = TRUE )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"seuList list consisting Seurat objects, object SRT data batch. default assay Seurat object used data preprocessing followed model fitting. specified format seuList argument can referred details example. project optional string, name project, default \"iSC.MEB\". gene.number optional integer, number top spatially variable genes (SVGs) highly variable  genes (HVGs) chosen. selectGenesMethod optional integer, method select genes sample. supports 'SPARK-X' 'HVGs' select genes now. Users can provide self-selected genes using customGenelist argument. numCores_sparkx optional integer, specify number CPU cores SPARK package use selecting spatial genes. customGenelist optional string vector, list user specified genes used PRECAST model fitting. argument given, SVGs/HVGs selected. premin.spots optional integer, features (genes) retained raw data filtering step least premin.spots number spots, default 20. premin.features optional integer, locations retained raw data filtering step least premin.features number  nonzero-count features (genes), default 20. postmin.spots optional integer, features (genes) retained filtering step common genes selected among data batches least premin.spots number spots, default 15. postmin.features optional integer, locations retained filtering step common genes selected among data batches  least premin.features number  nonzero-count features (genes), default 15. rawData.preserve optional logical value, whether preserve raw seuList data. verbose indictor whether display message creating process.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"Returns iSC.MEB object prepared iSC.MEB model fitting.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"seuList list Seurat object component, Seurat object includes raw expression count matrix, spatial coordinates meta data data batch, spatial coordinates information must saved metadata Seurat, named \"row\" \"col\" data batch.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateiSCMEBObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the iSC.MEB object with preprocessing step. â CreateiSCMEBObject","text":"","code":"data(iSCMEBObj_toy) library(Seurat) seuList <- iSCMEBObj_toy@seulist ## Check the input of seuList for create iSC.MEB object. ## Check the default assay for each data batch sapply(seuList, DefaultAssay) #> [1] \"RNA\" \"RNA\" ## Check the spatial coordinates in the meta data named \"row\" and \"col\". colnames(seuList[[1]]@meta.data) #> [1] \"orig.ident\"            \"nCount_RNA\"            \"nFeature_RNA\"          #> [4] \"layer_guess_reordered\" \"row\"                   \"col\"                   ## Then create iSC.MEB object using this seuList.  ## For convenience, we show the  user-specified genes' list for creating iSC.MEB object.  ## Users can use SVGs from SPARK-X or HVGs. Genelist <- row.names(seuList[[1]]) iSCMEBObj_toy2 <- CreateiSCMEBObject(seuList, customGenelist=Genelist, verbose=FALSE)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"function CreateNeighbors used calculate adjacency matrix form spatial coordinates.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"","code":"CreateNeighbors(   obj,   platform = c(\"Other\", \"ST\", \"Visium\"),   lower.med = 4,   upper.med = 6,   radius.upper = 100 )  # S3 method for iSCMEBObj CreateNeighbors(   obj,   platform = c(\"Other\", \"ST\", \"Visium\"),   lower.med = 4,   upper.med = 6,   radius.upper = 100 )  # S3 method for list CreateNeighbors(   obj,   platform = c(\"Other\", \"ST\", \"Visium\"),   lower.med = 4,   upper.med = 6,   radius.upper = 100 )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"obj seuList iSCMEBObj object posList. platform string, specify platform provided data, default \"\", support \"ST\" \"Visium\" platform. platform specified \"\", adjacency matrix built based L2 distance. lower.med option parameter determine lower bound median number neighborhoods. provided platform specified \"\". upper.med option parameter determine upper bound median number neighborhoods. provided platform specified \"\". radius.upper option parameter determine search radius upper bound neighborhoods. provided platform specified \"\".","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"Returns revised iSCMEBObj object. Returns revised list.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"seuList list Seurat object component, Seurat object includes raw expression count matrix, spatial coordinates meta data data batch, spatial coordinates information must saved metadata Seurat, named \"row\" \"col\" data batch. posList list position information, element can data.frame matrix. element posList data.frame, data.frame contain columns names \"row\" \"col\". element posList matrix, matrices two column matrices.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/CreateNeighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate adjacency matrix form spatial coordinates. â CreateNeighbors","text":"","code":"data(iSCMEBObj_toy) library(Seurat) iSCMEBObj_toy2 <- CreateNeighbors(iSCMEBObj_toy, platform = \"Visium\") #> Neighbors were identified for 4222 out of 4222 spots. #> Neighbors were identified for 4378 out of 4381 spots. ## iSCMEBObj_toy2 <- CreateNeighbors(iSCMEBObj_toy, radius.upper = 10)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doDEG.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DEG for a Seurat object. â doDEG","title":"Run DEG for a Seurat object. â doDEG","text":"function doDEG used run DEG Seurat object","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doDEG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DEG for a Seurat object. â doDEG","text":"","code":"doDEG(seu, topn = 10)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doDEG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DEG for a Seurat object. â doDEG","text":"seu Seurat object. topn number features extracted features provided. 10 default.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap for spots-by-feature matrix â doHeatmap","title":"Heatmap for spots-by-feature matrix â doHeatmap","text":"function doHeatmap used plot heatmap Seurat object expressioin data.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap for spots-by-feature matrix â doHeatmap","text":"","code":"doHeatmap(   seu,   features = NULL,   topn = 10,   cell_label = \"Domain\",   grp_label = FALSE,   pt_size = 4,   grp_color = NULL,   ncol.legend = 1,   ... )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/doHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap for spots-by-feature matrix â doHeatmap","text":"seu Seurat object. features features plotted. topn number features extracted features provided. 10 default. cell_label string specify name legend. \"Domain\" default. grp_label indicator whether display group names. FALSE default. pt_size point size used plot. 4 default. grp_color colors use group color bar. NULL default. ncol.legend number columns legend. ... Arguments passed methods.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the identity of iSC.MEB â embeddings","title":"Get the identity of iSC.MEB â embeddings","text":"function embeddings used get low dimensional embeddings iSC.MEB model.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the identity of iSC.MEB â embeddings","text":"","code":"embeddings(obj)  # S3 method for iSCMEBObj embeddings(obj)  # S3 method for iSCMEBResObj embeddings(obj)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the identity of iSC.MEB â embeddings","text":"obj iSCMEBObj object iSCMEBResObj object.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the identity of iSC.MEB â embeddings","text":"Returns list embedding, whose -th element embedding -th tissue section. Returns list embedding, whose -th element embedding -th tissue section.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the identity of iSC.MEB â embeddings","text":"iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, main function package. iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, body algorithm.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/embeddings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the identity of iSC.MEB â embeddings","text":"","code":"data(iSCMEBObj_toy) EmbeddingsList <- embeddings(iSCMEBObj_toy)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a iSC.MEB model. â fit.iscmeb","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"function fit.iscmeb used fit iSC.MEB model.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"","code":"fit.iscmeb(   VList,   AdjList,   K,   beta_grid = seq(0, 5, by = 0.2),   maxIter_ICM = 6,   maxIter = 25,   epsLogLik = 1e-05,   verbose = TRUE,   int.model = \"EEE\",   init.start = 1,   Sigma_equal = FALSE,   Sigma_diag = TRUE,   seed = 1,   coreNum = 1,   criteria = c(\"MBIC\", \"MAIC\", \"BIC\", \"AIC\"),   c_penalty = 1,   pca.method = \"PCA\" )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"VList list PCs log-normalized gene expression matrix. -th element ni * npcs matrtix, ni number spots sample , npcs number PC. provide interface users like define PCs . AdjList list adjacency matrix class dgCMatrix. provide interface users like define adjacency matrix . K integer integer vector, specify candidates number clusters. beta_grid optional vector positive value, candidate set smoothing parameter searched grid-search optimization approach, defualt sequence starts 0, ends 5, increase 0.2. maxIter_ICM optional positive value, represents maximum iterations ICM (6 default). maxIter optional positive value, represents maximum iterations EM (25 default). epsLogLik optional positive vlaue, tolerance vlaue relative variation rate observed pseudo log-loglikelihood value, defualt '1e-5'. verbose optional logical value, whether output information ICM-EM algorithm. int.model optional string, specify Gaussian mixture model used evaluting initial values iSC.MEB, default \"EEE\"; see Mclust models' names. init.start optional number times calculate initial value (1 default). init.start larger 1, initial value determined log likelihood mclust results. Sigma_equal optional logical value, specify whether Sigmaks equal, default FALSE. Sigma_diag optional logical value, specify whether Sigmaks diagonal matrices, default TRUE. seed optional integer, random seed fitting iSC.MEB model. coreNum optional positive integer, means number thread used parallel computating (1 default). criteria string, specify criteria used selecting number clusters, supporting \"MBIC\", \"MAIC\", \"BIC\" \"AIC\" (\"MBIC\" default). c_penalty optional positive value, adjusted constant used MBIC criteria (1 default). pca.method string specify dimension reduction method used generate VList. \"PCA\" default.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"Returns iSCMEBResObj object contains model results.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, body algorithm.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/fit.iscmeb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a iSC.MEB model. â fit.iscmeb","text":"","code":"data(iSCMEBObj_toy) library(Seurat) XList <- lapply(iSCMEBObj_toy@seulist, function(x) Matrix::t(x@assays$RNA@data)) VList <- runPCA(XList) posList <- lapply(iSCMEBObj_toy@seulist, function(x) x@meta.data[,c(\"row\", \"col\")]) AdjList <- CreateNeighbors(posList, platform = \"Visium\") #> Neighbors were identified for 4222 out of 4222 spots. #> Neighbors were identified for 4378 out of 4381 spots. resList <- fit.iscmeb(VList, AdjList, K=7, maxIter=10) #> Evaluate initial values... #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> Fit SC-MEB2... #> Finish variable initialization  #> K = 7, iter = 2, loglik= -148583.924112, dloglik=0.999931  #> K = 7, iter = 3, loglik= -142378.593319, dloglik=0.041763  #> K = 7, iter = 4, loglik= -138932.559873, dloglik=0.024203  #> K = 7, iter = 5, loglik= -135452.994625, dloglik=0.025045  #> K = 7, iter = 6, loglik= -133626.290687, dloglik=0.013486  #> K = 7, iter = 7, loglik= -132565.279798, dloglik=0.007940  #> K = 7, iter = 8, loglik= -131780.626891, dloglik=0.005919  #> K = 7, iter = 9, loglik= -131009.202464, dloglik=0.005854  #> K = 7, iter = 10, loglik= -130602.705279, dloglik=0.003103"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Human_HK_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Human housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Human_HK_genes","title":"Human housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Human_HK_genes","text":"Human housekeeping genes Housekeeping Reference Transcript Atlas.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Human_HK_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Human_HK_genes","text":"","code":"data(Human_HK_genes)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Human_HK_genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Human_HK_genes","text":"data.frame includes human housekeeping genes information columns named \"Gene\" \"Ensembl\".","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the identity of iSC.MEB â idents","title":"Get the identity of iSC.MEB â idents","text":"function idents used get clustering result iSC.MEB model.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the identity of iSC.MEB â idents","text":"","code":"idents(obj)  # S3 method for iSCMEBObj idents(obj)  # S3 method for iSCMEBResObj idents(obj)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the identity of iSC.MEB â idents","text":"obj iSCMEBObj object iSCMEBResObj object.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the identity of iSC.MEB â idents","text":"Returns list identity, whose -th element identity -th tissue section. Returns list identity, whose -th element identity -th tissue section.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the identity of iSC.MEB â idents","text":"iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, main function package. iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, body algorithm.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/idents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the identity of iSC.MEB â idents","text":"","code":"data(iSCMEBObj_toy) IdentsList <- idents(iSCMEBObj_toy)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/IntegrateSpaData.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate multiple SRT expression data â IntegrateSpaData","title":"Integrate multiple SRT expression data â IntegrateSpaData","text":"function IntegrateSpaData used integrate multiple SRT data based iSCMEBObj iSC.MEB model fitting.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/IntegrateSpaData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate multiple SRT expression data â IntegrateSpaData","text":"","code":"IntegrateSpaData(   obj,   species = c(\"human\", \"mouse\", \"unknown\"),   custom_housekeep = NULL )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/IntegrateSpaData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate multiple SRT expression data â IntegrateSpaData","text":"obj iSCMEBObj object. species optional string, one 'Human', 'Mouse' 'Unknown', specify species SRT data help choose housekeeping genes. 'Unknown' means using PRECAST results reconstruct alligned gene expression. custom_housekeep User-specified housekeeping genes.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a iSC.MEB model. â iSCMEB","title":"Fit a iSC.MEB model. â iSCMEB","text":"function iSCMEB used fit iSC.MEB model iSCMEBObj object.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a iSC.MEB model. â iSCMEB","text":"","code":"iSCMEB(iSCMEBObj, K = NULL)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a iSC.MEB model. â iSCMEB","text":"iSCMEBObj iSCMEBObj object. K optional integer integer vector, specify candidates number clusters. K=NULL, set 5~12.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a iSC.MEB model. â iSCMEB","text":"Returns revised iSCMEBObj object.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a iSC.MEB model. â iSCMEB","text":"model results saved slot resList.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a iSC.MEB model. â iSCMEB","text":"","code":"data(iSCMEBObj_toy) library(Seurat) iSCMEBObj_toy <- runPCA(iSCMEBObj_toy) iSCMEBObj_toy <- CreateNeighbors(iSCMEBObj_toy, platform = \"Visium\") #> Neighbors were identified for 4222 out of 4222 spots. #> Neighbors were identified for 4378 out of 4381 spots. iSCMEBObj_toy <- SetModelParameters(iSCMEBObj_toy, maxIter=10) iSCMEBObj_toy <- iSCMEB(iSCMEBObj_toy, K = 7) #> Evaluate initial values... #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> Fit SC-MEB2... #> Finish variable initialization  #> K = 7, iter = 2, loglik= -148583.924112, dloglik=0.999931  #> K = 7, iter = 3, loglik= -142378.593319, dloglik=0.041763  #> K = 7, iter = 4, loglik= -138932.559873, dloglik=0.024203  #> K = 7, iter = 5, loglik= -135452.994625, dloglik=0.025045  #> K = 7, iter = 6, loglik= -133626.290687, dloglik=0.013486  #> K = 7, iter = 7, loglik= -132565.279798, dloglik=0.007940  #> K = 7, iter = 8, loglik= -131780.626891, dloglik=0.005919  #> K = 7, iter = 9, loglik= -131009.202464, dloglik=0.005854  #> K = 7, iter = 10, loglik= -130602.705279, dloglik=0.003103"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEBObj-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Each iSCMEBObj object has a number of slots which store information. â iSCMEBObj-class","title":"Each iSCMEBObj object has a number of slots which store information. â iSCMEBObj-class","text":"iSCMEBObj object number slots store information. Key slots access listed . seuList - list Seurat object component, representing raw expression count matrix, spatial coordinates meta data data batch, spatial coordinates information saved metadata Seurat, named \"row\" \"col\" eahc data batch. seulist - Seurat list preprocessing step preparation iSC.MEB model. AdjList - adjacency matrix list iSCMEBObj object. posList - position matrix list iSCMEBObj object. parameterList - model parameter settings iSCMEBObj object. resList - results fitting iSC.MEB models, iSCMEBResObj object. project - Name project.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEBObj_toy.html","id":null,"dir":"Reference","previous_headings":"","what":"A toy data to help user get started with our packages. â iSCMEBObj_toy","title":"A toy data to help user get started with our packages. â iSCMEBObj_toy","text":"toy data help user get started packages.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEBObj_toy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A toy data to help user get started with our packages. â iSCMEBObj_toy","text":"","code":"data(iSCMEBObj_toy)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEBObj_toy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A toy data to help user get started with our packages. â iSCMEBObj_toy","text":"iSCMEBObj. seulist slot includes list two Seurat data.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/iSCMEBResObj-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Each iSCMEBResObj object has a number of slots which store information. â iSCMEBResObj-class","title":"Each iSCMEBResObj object has a number of slots which store information. â iSCMEBResObj-class","text":"iSCMEBResObj object number slots store information. Key slots access listed . posList - position matrix list iSCMEBResObj object. paramList - model parameter settings iSCMEBResObj object. fitList - details iSC.MEB models. project - Name project. reduction - dimension reduction result iSC.MEB model. idents - clustering result iSC.MEB model.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/LowEmbedPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot low-dimensional embeddings â LowEmbedPlot","title":"Plot low-dimensional embeddings â LowEmbedPlot","text":"function LowEmbedPlot used visualize low-dimensional embeddings vs cluster batch demonstrate clustering performance batch remove performance.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/LowEmbedPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot low-dimensional embeddings â LowEmbedPlot","text":"","code":"LowEmbedPlot(   obj,   item = c(\"cluster\", \"batch\"),   reduction = NULL,   combine = TRUE,   cols = NULL,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )  # S3 method for iSCMEBObj LowEmbedPlot(   obj,   item = c(\"cluster\", \"batch\"),   reduction = NULL,   combine = TRUE,   cols = NULL,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )  # S3 method for iSCMEBResObj LowEmbedPlot(   obj,   item = c(\"cluster\", \"batch\"),   reduction = NULL,   combine = TRUE,   cols = NULL,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/LowEmbedPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot low-dimensional embeddings â LowEmbedPlot","text":"obj iSCMEBObj object iSCMEBResObj object. item feature used plot. reduction name embeddings used plot. reduction null, last added one used plotting. combine indicator whether plot figure. TRUE, figures plotted; otherwise, return list plot component. TRUE default. cols vector determine colors used plot. layout.dim dimension layout plots combine = TRUE. common.legend indicator whether combine legend multiple plots. TRUE default. ... Arguments passed methods.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/LowEmbedPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot low-dimensional embeddings â LowEmbedPlot","text":"Return ggplot2 object. Return ggplot2 object.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/LowEmbedPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot low-dimensional embeddings â LowEmbedPlot","text":"","code":"data(iSCMEBObj_toy) library(Seurat) p1 <- LowEmbedPlot(iSCMEBObj_toy, item=\"cluster\", reduction=\"TSNE2\") p2 <- LowEmbedPlot(iSCMEBObj_toy, item=\"batch\", reduction=\"TSNE2\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Mouse_HK_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Mouse housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Mouse_HK_genes","title":"Mouse housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Mouse_HK_genes","text":"Mouse housekeeping genes Housekeeping Reference Transcript Atlas.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Mouse_HK_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mouse housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Mouse_HK_genes","text":"","code":"data(Mouse_HK_genes)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/Mouse_HK_genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mouse housekeeping genes from the Housekeeping and Reference Transcript Atlas. â Mouse_HK_genes","text":"data.frame includes mouse housekeeping genes information columns named \"Gene\" \"Ensembl\".","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_RGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial RGB heatmap. â plot_RGB","title":"Plot spatial RGB heatmap. â plot_RGB","text":"function plot_RGB used plot spatial RGB heatmap.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_RGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial RGB heatmap. â plot_RGB","text":"","code":"plot_RGB(position, embed_3d, pointsize = 2, ...)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_RGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial RGB heatmap. â plot_RGB","text":"position two columns matrix data.fram, provides coordinates information. embed_3d three columns  matrix data.fram, provides rgb information. pointsize size point scatter plot. ... Arguments passed methods.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_RGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial RGB heatmap. â plot_RGB","text":"Returns RGB plot.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_RGB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial RGB heatmap. â plot_RGB","text":"","code":"data(iSCMEBObj_toy) library(Seurat) position <- iSCMEBObj_toy@posList[[1]] tsne3 <- iSCMEBObj_toy@resList@reduction$TSNE3[[1]] p1 <- plot_RGB(position, tsne3)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot for two-dimensional embeddings â plot_scatter","title":"Scatter plot for two-dimensional embeddings â plot_scatter","text":"function plot_scatter used draw scatter plot.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot for two-dimensional embeddings â plot_scatter","text":"","code":"plot_scatter(   position,   labels,   label_name,   axis_names = c(\"tSNE1\", \"tSNE2\"),   cols = NULL,   no_guides = FALSE,   do_density = FALSE,   no_axis_name = FALSE,   point_size = 2,   point_alpha = 1,   nrow.legend = NULL,   legend.position = \"bottom\",   no_axis = FALSE,   ... )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot for two-dimensional embeddings â plot_scatter","text":"position two columns matrix data.fram, provides coordinates information. labels vector provides label information. label_name string provides name labels. axis_names Axis names. cols vector determine colors used plot. no_guides indicator whether remove legend. FALSE default. do_density indicator whether plot density. FALSE default. no_axis_name indicator whether remove axis names. FALSE default. point_size point size scatter plot. 2 default. point_alpha transparency scatter plot. 1 default. nrow.legend integer specify row number legend. legend.position position legend. \"bottom\" default. no_axis indicator whether remove axis labels names. ... Arguments passed methods.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot for two-dimensional embeddings â plot_scatter","text":"Returns scatter plot.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/plot_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot for two-dimensional embeddings â plot_scatter","text":"","code":"data(iSCMEBObj_toy) library(Seurat) position <- iSCMEBObj_toy@posList[[1]] labels <- idents(iSCMEBObj_toy)[[1]] p1 <- plot_scatter(position, labels, \"clusters\")"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality reduction using PCA. â runPCA","title":"Dimensionality reduction using PCA. â runPCA","text":"function runPCA used run PCA dimensionality reduction.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality reduction using PCA. â runPCA","text":"","code":"runPCA(   obj,   npcs = 15,   pca.method = c(\"APCA\", \"PCA\", \"WPCA\"),   reduction.name = \"pca\",   seed = 1 )  # S3 method for iSCMEBObj runPCA(   obj,   npcs = 15,   pca.method = c(\"APCA\", \"PCA\", \"WPCA\"),   reduction.name = \"pca\",   seed = 1 )  # S3 method for list runPCA(   obj,   npcs = 15,   pca.method = c(\"APCA\", \"PCA\", \"WPCA\"),   reduction.name = \"pca\",   seed = 1 )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality reduction using PCA. â runPCA","text":"obj seuList iSCMEBObj object matrix list. npcs Total Number PCs compute store (15 default). pca.method string, specify kind PCA used. Supporting \"APCA\" (approximate PCA), \"PCA\" (classical PCA) \"WPCA\" (weighted PCA). Default method APCA. reduction.name Dimensional reduction name, pca default seed random seed APCA method. 1 default.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensionality reduction using PCA. â runPCA","text":"Returns revised iSCMEBObj object input iSCMEBObj. Returns revised list input seuList matrix list.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensionality reduction using PCA. â runPCA","text":"seuList list Seurat object component, Seurat object includes raw expression count matrix, spatial coordinates meta data data batch, spatial coordinates information must saved metadata Seurat, named \"row\" \"col\" data batch. matrix list list log-transformed expression matrix, element columns.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/runPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensionality reduction using PCA. â runPCA","text":"","code":"data(iSCMEBObj_toy) library(Seurat) ## For convenience, we show the iSCMEBObj for perform dimension reduction.  ## Users can use PCA method or WPCA. iSCMEBObj_toy2 <- runPCA(iSCMEBObj_toy) ## seulist <- iSCMEBObj_toy$seulist ## seulist <- runPCA(seulist)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectKPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"SelectKPlot. â SelectKPlot","title":"SelectKPlot. â SelectKPlot","text":"function SelectKPlot used demonstrate scatter plot criteria used vs K selecting best K.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectKPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SelectKPlot. â SelectKPlot","text":"","code":"SelectKPlot(obj, criteria = c(\"InUse\", \"MBIC\", \"MAIC\", \"BIC\", \"AIC\"))  # S3 method for iSCMEBObj SelectKPlot(obj, criteria = c(\"InUse\", \"MBIC\", \"MAIC\", \"BIC\", \"AIC\"))  # S3 method for iSCMEBResObj SelectKPlot(obj, criteria = c(\"InUse\", \"MBIC\", \"MAIC\", \"BIC\", \"AIC\"))"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectKPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SelectKPlot. â SelectKPlot","text":"obj iSCMEBObj object iSCMEBResObj object. criteria string, specify criteria used selecting number clusters, supporting \"InUse\", \"MBIC\", \"MAIC\", \"BIC\" \"AIC\" (\"InUse\" default).","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectKPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SelectKPlot. â SelectKPlot","text":"Return ggplot2 object. Return ggplot2 object.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Select best iSC.MEB model from candidated models. â SelectModel","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"function SelectModel used select optimal solution given criteria number clusters.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"","code":"SelectModel(   obj,   criteria = c(\"MBIC\", \"MAIC\", \"BIC\", \"AIC\"),   c_penalty = 1,   K = NULL )  # S3 method for iSCMEBObj SelectModel(   obj,   criteria = c(\"MBIC\", \"MAIC\", \"BIC\", \"AIC\"),   c_penalty = 1,   K = NULL )  # S3 method for iSCMEBResObj SelectModel(   obj,   criteria = c(\"MBIC\", \"MAIC\", \"BIC\", \"AIC\"),   c_penalty = 1,   K = NULL )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"obj iSCMEBObj object iSCMEBResObj object. criteria string, specify criteria used selecting number clusters, supporting \"MBIC\", \"MAIC\", \"BIC\" \"AIC\" (\"MBIC\" default). c_penalty optional positive value, adjusted constant used MBIC criteria (1 default). K optional number cluster. K null, iSC.MEB solution K clusters selected, default NULL.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"Returns revised iSCMEBObj object. Returns revised list","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"iSCMEBResObj object contains iSC.MEB solution information. output function fit.iscmeb, body algorithm.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SelectModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select best iSC.MEB model from candidated models. â SelectModel","text":"","code":"data(iSCMEBObj_toy) iSCMEBObj_toy <- SelectModel(iSCMEBObj_toy)"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SetModelParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set model parameters for iSC.MEB method â SetModelParameters","title":"Set model parameters for iSC.MEB method â SetModelParameters","text":"function SetModelParameters used set model parameters iSC.MEB.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SetModelParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set model parameters for iSC.MEB method â SetModelParameters","text":"","code":"SetModelParameters(   obj,   beta_grid = seq(0, 5, by = 0.2),   maxIter_ICM = 6,   maxIter = 25,   epsLogLik = 1e-05,   verbose = TRUE,   int.model = \"EEE\",   init.start = 1,   Sigma_equal = FALSE,   Sigma_diag = TRUE,   seed = 1,   coreNum = 1,   criteria = c(\"MBIC\", \"MAIC\", \"BIC\", \"AIC\"),   c_penalty = 1 )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SetModelParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set model parameters for iSC.MEB method â SetModelParameters","text":"obj iSCMEBObj object. beta_grid optional vector positive value, candidate set smoothing parameter searched grid-search optimization approach, defualt sequence starts 0, ends 5, increase 0.2. maxIter_ICM optional positive value, represents maximum iterations ICM (6 default). maxIter optional positive value, represents maximum iterations EM (25 default). epsLogLik optional positive vlaue, tolerance vlaue relative variation rate observed pseudo log-loglikelihood value, defualt '1e-5'. verbose optional logical value, whether output information ICM-EM algorithm. int.model optional string, specify Gaussian mixture model used evaluting initial values iSC.MEB, default \"EEE\"; see Mclust models' names. init.start optional number times calculate initial value (1 default). init.start larger 1, initial value determined log likelihood mclust results. Sigma_equal optional logical value, specify whether Sigmaks equal, default FALSE. Sigma_diag optional logical value, specify whether Sigmaks diagonal matrices, default TRUE. seed optional integer, random seed fitting iSC.MEB model. coreNum optional positive integer, means number thread used parallel computating (1 default). criteria string, specify criteria used selecting number clusters, supporting \"MBIC\", \"MAIC\", \"BIC\" \"AIC\" (\"MBIC\" default). c_penalty optional positive value, adjusted constant used MBIC criteria (1 default).","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SetModelParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set model parameters for iSC.MEB method â SetModelParameters","text":"Returns iSC.MEB object.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SetModelParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set model parameters for iSC.MEB method â SetModelParameters","text":"","code":"data(iSCMEBObj_toy) iSCMEBObj_toy <- SetModelParameters(iSCMEBObj_toy) iSCMEBObj_toy@parameterList #> $npcs #> [1] 15 #>  #> $pca.method #> [1] \"APCA\" #>  #> $reduction.name #> [1] \"pca\" #>  #> $platform #> [1] \"Visium\" #>  #> $beta_grid #>  [1] 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0 3.2 3.4 3.6 #> [20] 3.8 4.0 4.2 4.4 4.6 4.8 5.0 #>  #> $maxIter_ICM #> [1] 6 #>  #> $maxIter #> [1] 25 #>  #> $epsLogLik #> [1] 1e-05 #>  #> $verbose #> [1] TRUE #>  #> $int.model #> [1] \"EEE\" #>  #> $init.start #> [1] 1 #>  #> $Sigma_equal #> [1] FALSE #>  #> $Sigma_diag #> [1] TRUE #>  #> $seed #> [1] 1 #>  #> $coreNum #> [1] 1 #>  #> $criteria #> [1] \"MBIC\" #>  #> $c_penalty #> [1] 1 #>"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SpaHeatMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial heatmap â SpaHeatMap","title":"Plot spatial heatmap â SpaHeatMap","text":"function SpaHeatMap used visualize physical location vs cluster batch.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SpaHeatMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial heatmap â SpaHeatMap","text":"","code":"SpaHeatMap(   obj,   item = c(\"cluster\", \"batch\"),   plot_type = c(\"Scatter\", \"RGB_TSNE\", \"RGB_UMAP\"),   title_name = NULL,   combine = TRUE,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )  # S3 method for iSCMEBObj SpaHeatMap(   obj,   item = c(\"cluster\", \"batch\"),   plot_type = c(\"Scatter\", \"RGB_TSNE\", \"RGB_UMAP\"),   title_name = NULL,   combine = TRUE,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )  # S3 method for iSCMEBResObj SpaHeatMap(   obj,   item = c(\"cluster\", \"batch\"),   plot_type = c(\"Scatter\", \"RGB_TSNE\", \"RGB_UMAP\"),   title_name = NULL,   combine = TRUE,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )  # S3 method for list SpaHeatMap(   obj,   item = c(\"cluster\", \"batch\"),   plot_type = c(\"Scatter\", \"RGB_TSNE\", \"RGB_UMAP\"),   title_name = NULL,   combine = TRUE,   layout.dim = c(1, 2),   common.legend = TRUE,   ... )"},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SpaHeatMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial heatmap â SpaHeatMap","text":"obj iSCMEBObj object iSCMEBResObj object. item feature used plot. plot_type string shows type plot. title_name string shows title plot. combine indicator whether plot figure. TRUE, figures plotted; otherwise, return list plot component. TRUE default. layout.dim dimension layout plots combine = TRUE. common.legend indicator whether combine legend multiple plots. TRUE default. ... Arguments passed methods.","code":""},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SpaHeatMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial heatmap â SpaHeatMap","text":"Return ggplot2 object list ggplots objects. Return ggplot2 object list ggplots objects. Return ggplot2 object list ggplots objects.","code":""},{"path":[]},{"path":"https://github.com/XiaoZhangryy/iSC.MEB/reference/SpaHeatMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial heatmap â SpaHeatMap","text":"","code":"data(iSCMEBObj_toy) library(Seurat) p1 <- SpaHeatMap(iSCMEBObj_toy, item=\"cluster\", plot_type=\"Scatter\", common.legend=TRUE) p2 <- SpaHeatMap(iSCMEBObj_toy, item=\"cluster\", plot_type=\"RGB_TSNE\", common.legend=TRUE)"}]
